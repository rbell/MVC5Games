@model Games.Models.RockPaperScissorsGamePlayModel
@{
    ViewBag.Title = "GamePlay";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Play Rock, Paper, Scissors!</h2>
<input id="sessionId" type="hidden" />
<input id="playerId" type="hidden" />
<div>
    <button id="btnRock" type="button" class="btn" data-loading-text="Rock">Rock</button>
    <button id="btnPaper" type="button" class="btn" data-loading-text="Paper">Paper</button>
    <button id="btnScissors" type="button" class="btn" data-loading-text="Scissors">Scissors</button>
    <span id="status" class="label label-success"></span>
</div>
<div>
    <h3>Players</h3>
    <ul id="players"></ul>
</div>


@section scripts{
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.0-rc1.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript">
        var rockPaperScissors;


        $(function () {

            var gamesession = '@Model.SessionId';

            // If player started game and is refreshing screen, we need to get the gamesession from their cookie
            if (document.cookie.indexOf('inGame') != -1) {
                if (gamesession == '') {
                    gamesession = getCookie('inGame');
                }
            }

            rockPaperScissors = $.connection.rockPaperScissorsHub;

            rockPaperScissors.client.playerJoined = function (player, playerCount) {
                var playerlisted = $('#players').has('li:contains(' + player.Name + ')');
                if (playerCount > 1 && !playerlisted.length) {
                    var encodedName = $('<div />').text(player.Name).html();
                    $('#players').append('<li>' + encodedName + '&nbsp;<span id="playerSelection1" class="label label-success"></span></li>');
                    $('#btnRock').button('reset');
                    $('#btnPaper').button('reset');
                    $('#btnScissors').button('reset');
                    $('#status').text('Make your selection now.');
                };
            };

            rockPaperScissors.client.winner = function (player1, player2) {
                $('#playerSelection0').text('Played ' + player1.Selection);
                $('#playerSelection1').text('Played ' + player2.Selection);
                var winnerName = player1.isWinner ? player1.Name : player2.Name;
                $('#status').text('Winner is ' + winnerName);
            };

            $.connection.hub.start().done(function () {
                rockPaperScissors.server.joinGame(gamesession, '@Model.SessionName').done(function (joinResults) {
                    $('#sessionId').val(joinResults.Id);
                    $('#playerId').val('@User.Identity.Name');
                    createCookie('inGame', joinResults.Id);

                    var playerCount = joinResults.Players.length;
                    for (var i = 0; i < playerCount; i++) {
                        var encodedName = $('<div />').text(joinResults.Players[i].Name).html();
                        $('#players').append('<li>' + encodedName + '&nbsp;<span id="playerSelection' + i + '" class="label label-success"></span></li>');
                    }

                    if (playerCount <= 1) {
                        $('#btnRock').button('loading');
                        $('#btnPaper').button('loading');
                        $('#btnScissors').button('loading');
                        $('#status').text("Waiting for another player to join.");
                    }
                    else {
                        $('#status').text('Make your selection now.');
                    }

                });

                $('#btnRock').click(function () {
                    playerSelectedValue('rock');
                });

                $('#btnPaper').click(function () {
                    playerSelectedValue('paper');
                });

                $('#btnScissors').click(function () {
                    playerSelectedValue('scissors');
                });

            });

            function playerSelectedValue(v) {
                rockPaperScissors.server.playerSelectedValue($('#sessionId').val(), $('#playerId').val(), v);
                $('#btnRock').button('loading');
                $('#btnPaper').button('loading');
                $('#btnScissors').button('loading');
                $('#status').text("Waiting for other players to make selection.");
            };

            function createCookie(name, value, expires, path, domain) {
                var cookie = name + "=" + escape(value) + ";";
                if (expires) {
                    // If it's a date
                    if (expires instanceof Date) {
                        // If it isn't a valid date
                        if (isNaN(expires.getTime()))
                            expires = new Date();
                    }
                    else
                        expires = new Date(new Date().getTime() + parseInt(expires) * 1000 * 60 * 60 * 24);
                    cookie += "expires=" + expires.toGMTString() + ";";
                }
                if (path)
                    cookie += "path=" + path + ";";
                if (domain)
                    cookie += "domain=" + domain + ";";
                document.cookie = cookie;
            }

            function getCookie(name) {
                var regexp = new RegExp("(?:^" + name + "|;\s*" + name + ")=(.*?)(?:;|$)", "g");
                var result = regexp.exec(document.cookie);
                return (result === null) ? null : result[1];
            }

        });
    </script>
}

